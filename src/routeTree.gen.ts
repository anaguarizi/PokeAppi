/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PokemonPokemonListRouteImport } from './routes/pokemon/pokemonList'
import { Route as PokemonIdRouteImport } from './routes/pokemon/$id'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedSalvosRouteImport } from './routes/_authenticated/salvos'
import { Route as AuthenticatedProfileRouteImport } from './routes/_authenticated/profile'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonPokemonListRoute = PokemonPokemonListRouteImport.update({
  id: '/pokemon/pokemonList',
  path: '/pokemon/pokemonList',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonIdRoute = PokemonIdRouteImport.update({
  id: '/pokemon/$id',
  path: '/pokemon/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/_authenticated/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSalvosRoute = AuthenticatedSalvosRouteImport.update({
  id: '/_authenticated/salvos',
  path: '/salvos',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProfileRoute = AuthenticatedProfileRouteImport.update({
  id: '/_authenticated/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/search': typeof SearchRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/salvos': typeof AuthenticatedSalvosRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon/pokemonList': typeof PokemonPokemonListRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/search': typeof SearchRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/salvos': typeof AuthenticatedSalvosRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon/pokemonList': typeof PokemonPokemonListRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/search': typeof SearchRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/salvos': typeof AuthenticatedSalvosRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon/pokemonList': typeof PokemonPokemonListRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/search'
    | '/profile'
    | '/salvos'
    | '/settings'
    | '/pokemon/$id'
    | '/pokemon/pokemonList'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/search'
    | '/profile'
    | '/salvos'
    | '/settings'
    | '/pokemon/$id'
    | '/pokemon/pokemonList'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/register'
    | '/search'
    | '/_authenticated/profile'
    | '/_authenticated/salvos'
    | '/_authenticated/settings'
    | '/pokemon/$id'
    | '/pokemon/pokemonList'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  SearchRoute: typeof SearchRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedSalvosRoute: typeof AuthenticatedSalvosRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  PokemonIdRoute: typeof PokemonIdRoute
  PokemonPokemonListRoute: typeof PokemonPokemonListRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemon/pokemonList': {
      id: '/pokemon/pokemonList'
      path: '/pokemon/pokemonList'
      fullPath: '/pokemon/pokemonList'
      preLoaderRoute: typeof PokemonPokemonListRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemon/$id': {
      id: '/pokemon/$id'
      path: '/pokemon/$id'
      fullPath: '/pokemon/$id'
      preLoaderRoute: typeof PokemonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/salvos': {
      id: '/_authenticated/salvos'
      path: '/salvos'
      fullPath: '/salvos'
      preLoaderRoute: typeof AuthenticatedSalvosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  SearchRoute: SearchRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedSalvosRoute: AuthenticatedSalvosRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  PokemonIdRoute: PokemonIdRoute,
  PokemonPokemonListRoute: PokemonPokemonListRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
